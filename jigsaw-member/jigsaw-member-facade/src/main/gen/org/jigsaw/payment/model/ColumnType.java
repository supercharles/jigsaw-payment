// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: taglib.proto

package org.jigsaw.payment.model;

/**
 * <pre>
 **
 * mysql表字段常用类型
 * </pre>
 *
 * Protobuf enum {@code ColumnType}
 */
public enum ColumnType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>VARCHAR = 1;</code>
   */
  VARCHAR(1),
  /**
   * <code>INT = 2;</code>
   */
  INT(2),
  /**
   * <code>BIGINT = 3;</code>
   */
  BIGINT(3),
  /**
   * <code>DOUBLE = 4;</code>
   */
  DOUBLE(4),
  /**
   * <code>FLOAT = 5;</code>
   */
  FLOAT(5),
  /**
   * <code>DECIMAL = 6;</code>
   */
  DECIMAL(6),
  /**
   * <code>DATETIME = 7;</code>
   */
  DATETIME(7),
  /**
   * <code>TIMESTAMP = 8;</code>
   */
  TIMESTAMP(8),
  ;

  /**
   * <code>VARCHAR = 1;</code>
   */
  public static final int VARCHAR_VALUE = 1;
  /**
   * <code>INT = 2;</code>
   */
  public static final int INT_VALUE = 2;
  /**
   * <code>BIGINT = 3;</code>
   */
  public static final int BIGINT_VALUE = 3;
  /**
   * <code>DOUBLE = 4;</code>
   */
  public static final int DOUBLE_VALUE = 4;
  /**
   * <code>FLOAT = 5;</code>
   */
  public static final int FLOAT_VALUE = 5;
  /**
   * <code>DECIMAL = 6;</code>
   */
  public static final int DECIMAL_VALUE = 6;
  /**
   * <code>DATETIME = 7;</code>
   */
  public static final int DATETIME_VALUE = 7;
  /**
   * <code>TIMESTAMP = 8;</code>
   */
  public static final int TIMESTAMP_VALUE = 8;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ColumnType valueOf(int value) {
    return forNumber(value);
  }

  public static ColumnType forNumber(int value) {
    switch (value) {
      case 1: return VARCHAR;
      case 2: return INT;
      case 3: return BIGINT;
      case 4: return DOUBLE;
      case 5: return FLOAT;
      case 6: return DECIMAL;
      case 7: return DATETIME;
      case 8: return TIMESTAMP;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ColumnType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ColumnType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ColumnType>() {
          public ColumnType findValueByNumber(int number) {
            return ColumnType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.jigsaw.payment.model.Taglib.getDescriptor().getEnumTypes().get(0);
  }

  private static final ColumnType[] VALUES = values();

  public static ColumnType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ColumnType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ColumnType)
}

